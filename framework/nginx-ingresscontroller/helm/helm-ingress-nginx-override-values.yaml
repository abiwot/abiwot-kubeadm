# helm-ingress-nginx-override-values.yaml
---
controller:
  replicaCount: 2
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - '{{ include "ingress-nginx.name" . }}'
          - key: app.kubernetes.io/instance
            operator: In
            values:
            - '{{ .Release.Name }}'
          - key: app.kubernetes.io/component
            operator: In
            values:
            - controller
        topologyKey: kubernetes.io/hostname
  service:
    type: NodePort
    nodePorts:
      http: 30080  # port used to send HTTP traffic from K8s LB to the Ingress Controller
      https: 30443 # port used to send HTTPS traffic from K8s LB to the Ingress Controller
      tcp:
      # Uncomment for TCP streaming ports used for 3rd party
        #<exposed port>: <host port>
        #8080: 32808
        #31672: 31672
        #31671: 31671
        #31674: 31674
        #31673: 31673
  config:
    enable-brotli: "true"
    log-format-upstream: '[$time_local] "STATUS:" $status "REQUEST:" $request "REMOTE_ADDR:"
      $remote_addr:$remote_port "CONN#" $connection "PROTOCOL:" $server_protocol "REFERER:"
      $http_referer "FORWARDED:" $http_x_forwarded_for "PROXYUPSTREAM:" $proxy_upstream_name
      "UPSTREAMADDR:" $upstream_addr "B_SENT:" $bytes_sent "REQUEST_TIME:" $request_time
      "USERAGENT:" $http_user_agent'
    proxy-buffer-size: "16k"
    proxy-http-version: "1.1"
    proxy-read-timeout: "3600"
    proxy-request-buffering: "off"
    proxy-send-timeout: "3600"
    use-http2: "true"
    default-backend: "defaultbackend"

defaultBackend:
  enabled: true
  name: defaultbackend
  image:
    registry: docker.io
    image: nginx
    tag: alpine
    pullPolicy: IfNotPresent
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    allowPrivilegeEscalation: false
    seccompProfile:
      type: RuntimeDefault
    readOnlyRootFilesystem: true
  extraVolumes:
    - name: defaultbackend-error-pages
      configMap:
        name: defaultbackend-error-pages
    - name: nginx-error-config
      configMap:
        name: nginx-error-config
    - name: nginx-cache
      emptyDir: {}
    - name: nginx-run
      emptyDir: {}
  extraVolumeMounts:
    - name: defaultbackend-error-pages
      mountPath: /usr/share/nginx/html
      readOnly: true
    - name: nginx-error-config
      mountPath: /etc/nginx/nginx.conf
      subPath: nginx.conf
      readOnly: true
    - name: nginx-cache
      mountPath: /var/cache/nginx
    - name: nginx-run
      mountPath: /var/run
  port: 8080
  resources:
    limits:
      cpu: 10m
      memory: 20Mi
    requests:
      cpu: 10m
      memory: 20Mi
  extraConfigMaps:
    - name: defaultbackend-error-pages
      data:
        404.html: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Service Not Found</title>
              <style>
                  body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                  h1 { color: red; }
              </style>
          </head>
          <body>
              <h1>404 - Page Not Found</h1>
              <p>Sorry, I bet you fat-fingered something...</p>
              <p>DIAG: endpoint reached - cdak8clst100 ingress-nginx-controller</p>
          </body>
          </html>
        500.html: |
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Service Not Found</title>
              <style>
                  body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
                  h1 { color: red; }
              </style>
          </head>
          <body>
              <h1>500 - Internal Server Error</h1>
              <p>Sorry, the cat has chewed the cable again!!</p>
              <p>DIAG: endpoint reached - cdak8clst100 ingress-nginx-controller</p>
          </body>
          </html>
    - name: nginx-error-config
      data:
        nginx.conf: |
          worker_processes  1;
          events { worker_connections 1024; }

          http {
              include       mime.types;
              default_type  application/octet-stream;
              sendfile        on;
              keepalive_timeout  65;

              server {
                  listen 8080;
                  server_name _;

                  location / {
                      root /usr/share/nginx/html;
                      index index.html;
                  }

                  location /healthz {
                      access_log off;
                      return 200 "OK\n";
                  }

                  error_page 404 /404.html;
                  location = /404.html {
                      root /usr/share/nginx/html;
                  }

                  error_page 500 502 503 504 /500.html;
                  location = /500.html {
                      root /usr/share/nginx/html;
                  }
              }
          }
  # labels:
  #   app.kubernetes.io/name: defaultbackend
  #   app.kubernetes.io/instance: {{ .Release.Name }}
  #   app.kubernetes.io/version: {{ .Chart.AppVersion }}
  #   app.kubernetes.io/component: controller
  #   app.kubernetes.io/part-of: ingress-nginx
  #   app.kubernetes.io/managed-by: {{ .Release.Service }}
tcp:
# Uncomment the corresponding namespace:port the cluster will use
  #<port>: "<namespace/service name>:<port>"
  #31672: "ns-commerce01/rabbitmq-cluster01:5672" #insecure internal is not used

...